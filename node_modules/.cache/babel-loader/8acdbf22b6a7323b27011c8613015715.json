{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProgrammingWorkspace\\\\Alpaca_education\\\\todo1\\\\todo1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport InputTask from './component/InputTask/InputTask';\nimport SortTask from './component/SortTask/SortTask';\nimport TaskList from './component/Tasks/TaskList';\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from './component/Pagination.jsx/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [taskList, setTaskList] = useState([{\n    id: 1,\n    taskText: 'Do something',\n    taskDate: '10/4/2020',\n    miliTaskDate: 1587292371000,\n    isCompleted: false\n  }, {\n    id: 2,\n    taskText: 'Do more',\n    taskDate: '10/4/2022',\n    miliTaskDate: 1650364371000,\n    isCompleted: false\n  }, {\n    id: 3,\n    taskText: 'Learn React',\n    taskDate: '10/4/2021',\n    miliTaskDate: 1618828371000,\n    isCompleted: false\n  }, {\n    id: 4,\n    taskText: 'Learn React',\n    taskDate: '20/4/2022',\n    miliTaskDate: 1650450771000,\n    isCompleted: false\n  }]);\n  useEffect(() => {\n    setFiltredTodoList(taskList);\n  }, [taskList]);\n\n  const removeTask = taskForRemove => {\n    setTaskList(taskList.filter(task => task.id !== taskForRemove.id));\n  };\n\n  const numberOfTaskOnPage = 5;\n  const [filtredTodoList, setFiltredTodoList] = useState(taskList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topPanel\",\n      children: [/*#__PURE__*/_jsxDEV(InputTask, {\n        setTaskList: setTaskList,\n        taskList: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortTask, {\n        taskList: taskList,\n        setFiltredTodoList: setFiltredTodoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), taskList.length ? /*#__PURE__*/_jsxDEV(TaskList, {\n      filtredTodoList: filtredTodoList,\n      removeTask: removeTask,\n      setTaskList: setTaskList,\n      taskList: taskList,\n      setFiltredTodoList: setFiltredTodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"no tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://img.freepik.com/free-vector/coffee-quotes-svg-design-vector_22345-1171.jpg?w=740\",\n        width: 450\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), taskList.length > numberOfTaskOnPage && /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Mw0dIfPiW1F6VbglG1skdOCYb3A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["InputTask","SortTask","TaskList","React","useEffect","useState","Pagination","App","taskList","setTaskList","id","taskText","taskDate","miliTaskDate","isCompleted","setFiltredTodoList","removeTask","taskForRemove","filter","task","numberOfTaskOnPage","filtredTodoList","length"],"sources":["C:/ProgrammingWorkspace/Alpaca_education/todo1/todo1/src/App.js"],"sourcesContent":["import './App.css';\nimport InputTask from './component/InputTask/InputTask';\nimport SortTask from './component/SortTask/SortTask';\nimport TaskList from './component/Tasks/TaskList';\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from './component/Pagination.jsx/Pagination';\n\nfunction App() {\n\n  const [taskList, setTaskList] = useState([\n    { id: 1, taskText: 'Do something', taskDate: '10/4/2020', miliTaskDate: 1587292371000, isCompleted: false, },\n    { id: 2, taskText: 'Do more', taskDate: '10/4/2022', miliTaskDate: 1650364371000, isCompleted: false, },\n    { id: 3, taskText: 'Learn React', taskDate: '10/4/2021', miliTaskDate: 1618828371000, isCompleted: false, },\n    { id: 4, taskText: 'Learn React', taskDate: '20/4/2022', miliTaskDate: 1650450771000, isCompleted: false, },\n  ])\n\n  useEffect(() => {\n    setFiltredTodoList(taskList)\n  }, [taskList])\n\n  const removeTask = (taskForRemove) => {\n    setTaskList(taskList.filter(task => task.id !== taskForRemove.id))\n  }\n\n  const numberOfTaskOnPage = 5;\n\n  const [filtredTodoList, setFiltredTodoList] = useState(taskList);\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo</h1>\n      <div className='topPanel'>\n        <InputTask setTaskList={setTaskList} taskList={taskList} />\n        <SortTask taskList={taskList} setFiltredTodoList={setFiltredTodoList} />\n      </div>\n      {taskList.length\n        ? <TaskList filtredTodoList={filtredTodoList} removeTask={removeTask}\n          setTaskList={setTaskList} taskList={taskList} setFiltredTodoList={setFiltredTodoList} />\n        : <div><h1>no tasks</h1>\n          <img\n            src='https://img.freepik.com/free-vector/coffee-quotes-svg-design-vector_22345-1171.jpg?w=740'\n            width={450} /></div>\n      }\n      {taskList.length > numberOfTaskOnPage &&\n        <Pagination  />\n      }\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,iCAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,CACvC;IAAEK,EAAE,EAAE,CAAN;IAASC,QAAQ,EAAE,cAAnB;IAAmCC,QAAQ,EAAE,WAA7C;IAA0DC,YAAY,EAAE,aAAxE;IAAuFC,WAAW,EAAE;EAApG,CADuC,EAEvC;IAAEJ,EAAE,EAAE,CAAN;IAASC,QAAQ,EAAE,SAAnB;IAA8BC,QAAQ,EAAE,WAAxC;IAAqDC,YAAY,EAAE,aAAnE;IAAkFC,WAAW,EAAE;EAA/F,CAFuC,EAGvC;IAAEJ,EAAE,EAAE,CAAN;IAASC,QAAQ,EAAE,aAAnB;IAAkCC,QAAQ,EAAE,WAA5C;IAAyDC,YAAY,EAAE,aAAvE;IAAsFC,WAAW,EAAE;EAAnG,CAHuC,EAIvC;IAAEJ,EAAE,EAAE,CAAN;IAASC,QAAQ,EAAE,aAAnB;IAAkCC,QAAQ,EAAE,WAA5C;IAAyDC,YAAY,EAAE,aAAvE;IAAsFC,WAAW,EAAE;EAAnG,CAJuC,CAAD,CAAxC;EAOAV,SAAS,CAAC,MAAM;IACdW,kBAAkB,CAACP,QAAD,CAAlB;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;EAIA,MAAMQ,UAAU,GAAIC,aAAD,IAAmB;IACpCR,WAAW,CAACD,QAAQ,CAACU,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYO,aAAa,CAACP,EAAlD,CAAD,CAAX;EACD,CAFD;;EAIA,MAAMU,kBAAkB,GAAG,CAA3B;EAEA,MAAM,CAACC,eAAD,EAAkBN,kBAAlB,IAAwCV,QAAQ,CAACG,QAAD,CAAtD;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE,QAAC,SAAD;QAAW,WAAW,EAAEC,WAAxB;QAAqC,QAAQ,EAAED;MAA/C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,QAAD;QAAU,QAAQ,EAAEA,QAApB;QAA8B,kBAAkB,EAAEO;MAAlD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAMGP,QAAQ,CAACc,MAAT,gBACG,QAAC,QAAD;MAAU,eAAe,EAAED,eAA3B;MAA4C,UAAU,EAAEL,UAAxD;MACA,WAAW,EAAEP,WADb;MAC0B,QAAQ,EAAED,QADpC;MAC8C,kBAAkB,EAAEO;IADlE;MAAA;MAAA;MAAA;IAAA,QADH,gBAGG;MAAA,wBAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAL,eACA;QACE,GAAG,EAAC,0FADN;QAEE,KAAK,EAAE;MAFT;QAAA;QAAA;QAAA;MAAA,QADA;IAAA;MAAA;MAAA;MAAA;IAAA,QATN,EAcGP,QAAQ,CAACc,MAAT,GAAkBF,kBAAlB,iBACC,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GA5CQb,G;;KAAAA,G;AA8CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
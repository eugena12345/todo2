{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProgrammingWorkspace\\\\Alpaca_education\\\\todo1\\\\todo1\\\\src\\\\component\\\\SortTask\\\\SortByDone\\\\SortByStatus.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MyButton from \"../../Button/MyButton\";\nimport style from './SortByStatus.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionSortByDone = ['All', 'Done', 'Undone'];\n\nconst SortByStatus = props => {\n  _s();\n\n  const [order, setOrder] = useState('all');\n\n  const sortByStatus = (taskList, typeOfSort) => {\n    if (typeOfSort === 'done') {\n      setOrder('done');\n      props.setFiltredTodoList(taskList.filter(item => item.isCompleted === true));\n    } else if (typeOfSort === 'undone') {\n      setOrder('undone');\n      props.setFiltredTodoList(taskList.filter(item => item.isCompleted === false));\n    } else if (typeOfSort === 'all') {\n      setOrder('all');\n      props.setFiltredTodoList(taskList);\n    }\n\n    props.setCurretnPage(1); //return console.log(copyTaskList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.sortPanel,\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => sortByStatus(props.taskList, 'all'),\n      button: 'all',\n      currentButton: order,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => sortByStatus(props.taskList, 'done'),\n      button: 'done',\n      currentButton: order,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => sortByStatus(props.taskList, 'undone'),\n      button: 'undone',\n      currentButton: order,\n      children: \"Undone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SortByStatus, \"E+s90S9Yh2R2C5OBajcW6rXGzz0=\");\n\n_c = SortByStatus;\nexport default SortByStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortByStatus\");","map":{"version":3,"names":["React","useState","MyButton","style","optionSortByDone","SortByStatus","props","order","setOrder","sortByStatus","taskList","typeOfSort","setFiltredTodoList","filter","item","isCompleted","setCurretnPage","sortPanel"],"sources":["C:/ProgrammingWorkspace/Alpaca_education/todo1/todo1/src/component/SortTask/SortByDone/SortByStatus.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MyButton from \"../../Button/MyButton\";\r\nimport style from './SortByStatus.module.css';\r\n\r\nconst optionSortByDone = ['All', 'Done', 'Undone']\r\n\r\n\r\nconst SortByStatus = (props) => {\r\nconst  [order, setOrder] = useState('all');\r\n\r\n    const sortByStatus = (taskList, typeOfSort) => {\r\n        \r\n        if (typeOfSort === 'done') {\r\n            setOrder('done');\r\n            props.setFiltredTodoList(taskList.filter(item => item.isCompleted === true));\r\n        } else if (typeOfSort === 'undone') {\r\n            setOrder('undone');\r\n            props.setFiltredTodoList(taskList.filter(item => item.isCompleted === false));\r\n        } else if (typeOfSort === 'all') {\r\n            setOrder('all');\r\n            props.setFiltredTodoList(taskList)}\r\n            props.setCurretnPage(1);\r\n        //return console.log(copyTaskList);\r\n    }\r\n\r\n    return (\r\n        <div className={style.sortPanel}>\r\n            <MyButton onClick={() => sortByStatus(props.taskList, 'all')}\r\n            button={'all'} currentButton={order}\r\n            >All</MyButton>\r\n            <MyButton onClick={() => sortByStatus(props.taskList, 'done')}\r\n             button={'done'} currentButton={order}\r\n            >Done</MyButton>\r\n            <MyButton onClick={() => sortByStatus(props.taskList, 'undone')}\r\n            button={'undone'} currentButton={order}\r\n            >Undone</MyButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortByStatus;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,CAAzB;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAO,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAnC;;EAEI,MAAMQ,YAAY,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;IAE3C,IAAIA,UAAU,KAAK,MAAnB,EAA2B;MACvBH,QAAQ,CAAC,MAAD,CAAR;MACAF,KAAK,CAACM,kBAAN,CAAyBF,QAAQ,CAACG,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,WAAL,KAAqB,IAA7C,CAAzB;IACH,CAHD,MAGO,IAAIJ,UAAU,KAAK,QAAnB,EAA6B;MAChCH,QAAQ,CAAC,QAAD,CAAR;MACAF,KAAK,CAACM,kBAAN,CAAyBF,QAAQ,CAACG,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,WAAL,KAAqB,KAA7C,CAAzB;IACH,CAHM,MAGA,IAAIJ,UAAU,KAAK,KAAnB,EAA0B;MAC7BH,QAAQ,CAAC,KAAD,CAAR;MACAF,KAAK,CAACM,kBAAN,CAAyBF,QAAzB;IAAmC;;IACnCJ,KAAK,CAACU,cAAN,CAAqB,CAArB,EAXuC,CAY3C;EACH,CAbD;;EAeA,oBACI;IAAK,SAAS,EAAEb,KAAK,CAACc,SAAtB;IAAA,wBACI,QAAC,QAAD;MAAU,OAAO,EAAE,MAAMR,YAAY,CAACH,KAAK,CAACI,QAAP,EAAiB,KAAjB,CAArC;MACA,MAAM,EAAE,KADR;MACe,aAAa,EAAEH,KAD9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII,QAAC,QAAD;MAAU,OAAO,EAAE,MAAME,YAAY,CAACH,KAAK,CAACI,QAAP,EAAiB,MAAjB,CAArC;MACC,MAAM,EAAE,MADT;MACiB,aAAa,EAAEH,KADhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAOI,QAAC,QAAD;MAAU,OAAO,EAAE,MAAME,YAAY,CAACH,KAAK,CAACI,QAAP,EAAiB,QAAjB,CAArC;MACA,MAAM,EAAE,QADR;MACkB,aAAa,EAAEH,KADjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CA/BD;;GAAMF,Y;;KAAAA,Y;AAiCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}
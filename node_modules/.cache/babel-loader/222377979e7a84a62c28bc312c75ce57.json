{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProgrammingWorkspace\\\\Alpaca_education\\\\todo1\\\\todo1\\\\src\\\\component\\\\Pagination.jsx\\\\Pagination.jsx\";\nimport React from \"react\";\nimport MyButton from \"../Button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  let {\n    length,\n    numberOfTaskOnPage,\n    paginate,\n    currentPage\n  } = _ref;\n  let pagesArray = [];\n  let pages = 1;\n\n  if (length) {\n    pages = Math.ceil(length / numberOfTaskOnPage);\n  }\n\n  for (let i = 1; i <= pages; i++) {\n    pagesArray.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => paginate(1),\n      button: 'start',\n      currentbutton: currentPage,\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), pagesArray.map(number => /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => paginate(number),\n      button: number,\n      currentbutton: currentPage,\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => paginate(pagesArray.length),\n      button: 'end',\n      currentbutton: currentPage,\n      children: \"end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","MyButton","Pagination","length","numberOfTaskOnPage","paginate","currentPage","pagesArray","pages","Math","ceil","i","push","map","number"],"sources":["C:/ProgrammingWorkspace/Alpaca_education/todo1/todo1/src/component/Pagination.jsx/Pagination.jsx"],"sourcesContent":["import React from \"react\";\r\nimport MyButton from \"../Button/MyButton\";\r\n\r\nconst Pagination = ({length, numberOfTaskOnPage, paginate, currentPage }) => {\r\n    let pagesArray = [];\r\n    let pages = 1;\r\n    if (length) {\r\n        pages = Math.ceil(length / numberOfTaskOnPage);\r\n    }\r\n    for (let i = 1; i <= pages; i++) {\r\n        pagesArray.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MyButton onClick={() => paginate(1)} button={'start'}\r\n                currentbutton={currentPage}>start</MyButton>\r\n            {pagesArray.map(number => (\r\n                <MyButton key={number}\r\n                    onClick={() => paginate(number)} button={number}\r\n                    currentbutton={currentPage}>{number}</MyButton>\r\n            ))}\r\n            <MyButton onClick={() => paginate(pagesArray.length)} button={'end'}\r\n                currentbutton={currentPage}>end</MyButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,UAAU,GAAG,QAA0D;EAAA,IAAzD;IAACC,MAAD;IAASC,kBAAT;IAA6BC,QAA7B;IAAuCC;EAAvC,CAAyD;EACzE,IAAIC,UAAU,GAAG,EAAjB;EACA,IAAIC,KAAK,GAAG,CAAZ;;EACA,IAAIL,MAAJ,EAAY;IACRK,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUP,MAAM,GAAGC,kBAAnB,CAAR;EACH;;EACD,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,KAArB,EAA4BG,CAAC,EAA7B,EAAiC;IAC7BJ,UAAU,CAACK,IAAX,CAAgBD,CAAhB;EACH;;EAED,oBACI;IAAA,wBACI,QAAC,QAAD;MAAU,OAAO,EAAE,MAAMN,QAAQ,CAAC,CAAD,CAAjC;MAAsC,MAAM,EAAE,OAA9C;MACI,aAAa,EAAEC,WADnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAGKC,UAAU,CAACM,GAAX,CAAeC,MAAM,iBAClB,QAAC,QAAD;MACI,OAAO,EAAE,MAAMT,QAAQ,CAACS,MAAD,CAD3B;MACqC,MAAM,EAAEA,MAD7C;MAEI,aAAa,EAAER,WAFnB;MAAA,UAEiCQ;IAFjC,GAAeA,MAAf;MAAA;MAAA;MAAA;IAAA,QADH,CAHL,eAQI,QAAC,QAAD;MAAU,OAAO,EAAE,MAAMT,QAAQ,CAACE,UAAU,CAACJ,MAAZ,CAAjC;MAAsD,MAAM,EAAE,KAA9D;MACI,aAAa,EAAEG,WADnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAvBD;;KAAMJ,U;AAyBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}
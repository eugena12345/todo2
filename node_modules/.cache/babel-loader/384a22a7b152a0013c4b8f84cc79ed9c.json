{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProgrammingWorkspace\\\\Alpaca_education\\\\todo1\\\\todo1\\\\src\\\\component\\\\Tasks\\\\Task\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport style from './Task.module.css';\nimport bnnStyle from '../../Button/Button.module.css';\nimport deleteImg from '../../../image/trash.jpg';\nimport InputForChangeTask from \"../../InputForChangeTask/InputForChangeTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = _ref => {\n  _s();\n\n  let {\n    task,\n    setTaskList,\n    taskList,\n    changeCompleted,\n    removeTask\n  } = _ref;\n\n  const isChecked = isCompleted => isCompleted === true ? 'checked' : false; ///\n\n\n  const [editMode, setEditMode] = useState(false); ///\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editMode ? /*#__PURE__*/_jsxDEV(InputForChangeTask, {\n      previousTaskText: task.taskText,\n      taskList: taskList,\n      taskID: task.uuid,\n      setTaskList: setTaskList,\n      setEditMode: setEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.task,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.leftSide,\n        onDoubleClick: () => setEditMode(true),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.check,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isChecked(task.done) ///чтобы отображать после перезагрузки страницы галочку\n            ,\n            onChange: () => changeCompleted(task)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.taskTexst,\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.rightSide,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: task.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.deleteTask,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `${style['border-img']} ${bnnStyle['delete-button']}`,\n            src: deleteImg,\n            alt: \"delete\",\n            width: \"40px\",\n            height: \"40px\",\n            onClick: () => removeTask(task.uuid)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","style","bnnStyle","deleteImg","InputForChangeTask","Task","task","setTaskList","taskList","changeCompleted","removeTask","isChecked","isCompleted","editMode","setEditMode","taskText","uuid","leftSide","check","done","taskTexst","name","rightSide","createdAt","deleteTask"],"sources":["C:/ProgrammingWorkspace/Alpaca_education/todo1/todo1/src/component/Tasks/Task/Task.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport style from './Task.module.css';\r\nimport bnnStyle from '../../Button/Button.module.css';\r\nimport deleteImg from '../../../image/trash.jpg';\r\nimport InputForChangeTask from \"../../InputForChangeTask/InputForChangeTask\";\r\n\r\nconst Task = ({ task, setTaskList, taskList, changeCompleted, removeTask }) => {\r\n\r\n    const isChecked = (isCompleted) => isCompleted === true ? 'checked' : false;///\r\n    const [editMode, setEditMode] = useState(false);///\r\n\r\n    return (\r\n        <div >\r\n            {editMode\r\n                ? <InputForChangeTask previousTaskText={task.taskText}\r\n                    taskList={taskList}\r\n                    taskID={task.uuid}\r\n                    setTaskList={setTaskList}\r\n                    setEditMode={setEditMode}\r\n                />\r\n                : <div className={style.task}>\r\n                    <div className={style.leftSide} onDoubleClick={() => setEditMode(true)}>\r\n                        <div className={style.check}>\r\n                            <input type='checkbox' checked={isChecked(task.done)}///чтобы отображать после перезагрузки страницы галочку\r\n                                onChange={() => changeCompleted(task)}\r\n                            />\r\n                        </div>\r\n                        <div className={style.taskTexst}>{task.name}</div>\r\n                    </div>\r\n                    <div className={style.rightSide}>\r\n                        <div >{task.createdAt}</div>\r\n                        <div className={style.deleteTask}>\r\n                            <img className={`${style['border-img']} ${bnnStyle['delete-button']}`}\r\n                                src={deleteImg} alt=\"delete\" width=\"40px\" height=\"40px\"\r\n                                onClick={() => removeTask(task.uuid)} />\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;;;AAEA,MAAMC,IAAI,GAAG,QAAkE;EAAA;;EAAA,IAAjE;IAAEC,IAAF;IAAQC,WAAR;IAAqBC,QAArB;IAA+BC,eAA/B;IAAgDC;EAAhD,CAAiE;;EAE3E,MAAMC,SAAS,GAAIC,WAAD,IAAiBA,WAAW,KAAK,IAAhB,GAAuB,SAAvB,GAAmC,KAAtE,CAF2E,CAEC;;;EAC5E,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC,CAH2E,CAG3B;;EAEhD,oBACI;IAAA,UACKc,QAAQ,gBACH,QAAC,kBAAD;MAAoB,gBAAgB,EAAEP,IAAI,CAACS,QAA3C;MACE,QAAQ,EAAEP,QADZ;MAEE,MAAM,EAAEF,IAAI,CAACU,IAFf;MAGE,WAAW,EAAET,WAHf;MAIE,WAAW,EAAEO;IAJf;MAAA;MAAA;MAAA;IAAA,QADG,gBAOH;MAAK,SAAS,EAAEb,KAAK,CAACK,IAAtB;MAAA,wBACE;QAAK,SAAS,EAAEL,KAAK,CAACgB,QAAtB;QAAgC,aAAa,EAAE,MAAMH,WAAW,CAAC,IAAD,CAAhE;QAAA,wBACI;UAAK,SAAS,EAAEb,KAAK,CAACiB,KAAtB;UAAA,uBACI;YAAO,IAAI,EAAC,UAAZ;YAAuB,OAAO,EAAEP,SAAS,CAACL,IAAI,CAACa,IAAN,CAAzC,CAAqD;YAArD;YACI,QAAQ,EAAE,MAAMV,eAAe,CAACH,IAAD;UADnC;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAK,SAAS,EAAEL,KAAK,CAACmB,SAAtB;UAAA,UAAkCd,IAAI,CAACe;QAAvC;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAK,SAAS,EAAEpB,KAAK,CAACqB,SAAtB;QAAA,wBACI;UAAA,UAAOhB,IAAI,CAACiB;QAAZ;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAEtB,KAAK,CAACuB,UAAtB;UAAA,uBACI;YAAK,SAAS,EAAG,GAAEvB,KAAK,CAAC,YAAD,CAAe,IAAGC,QAAQ,CAAC,eAAD,CAAkB,EAApE;YACI,GAAG,EAAEC,SADT;YACoB,GAAG,EAAC,QADxB;YACiC,KAAK,EAAC,MADvC;YAC8C,MAAM,EAAC,MADrD;YAEI,OAAO,EAAE,MAAMO,UAAU,CAACJ,IAAI,CAACU,IAAN;UAF7B;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EARV;IAAA;IAAA;IAAA;EAAA,QADJ;AA8BH,CAnCD;;GAAMX,I;;KAAAA,I;AAqCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}